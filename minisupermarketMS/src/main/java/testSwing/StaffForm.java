/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testSwing;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vn.edu.vtc.bl.AccountBL;
import vn.edu.vtc.bl.OrderBL;
import vn.edu.vtc.bl.ProductBL;
import vn.edu.vtc.persistance.Account;
import vn.edu.vtc.persistance.Order;
import vn.edu.vtc.persistance.Product;
import vn.edu.vtc.pl.OrderService;
import vn.edu.vtc.pl.StaticFunctionService;

/**
 *
 * @author asus
 */
public class StaffForm extends javax.swing.JFrame {
    private Order order=new Order();
    private Account account=new Account();
    /**
     * Creates new form StaffForm
     */
    public StaffForm(Account account) {
        initComponents();
        this.account=account;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnLogOut = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductList = new javax.swing.JTable();
        btnNewOrder = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        Id = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtProductId = new javax.swing.JTextField();
        spQuantity = new javax.swing.JSpinner();
        btnCheckout = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnchecking = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        tblProductList.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblProductList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Product", "Price", "Discounted", "Quantity", "Total Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblProductList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblProductList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblProductList);

        btnNewOrder.setText("New Order");
        btnNewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewOrderActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        Id.setText("Search Product :");

        jLabel1.setText("Quantity :");

        txtProductId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductIdActionPerformed(evt);
            }
        });

        spQuantity.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        btnCheckout.setText("Checkout");
        btnCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckoutActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnchecking.setText("check");
        btnchecking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncheckingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnLogOut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Id, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtProductId, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnchecking))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(208, 208, 208)
                                    .addComponent(btnNewOrder)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCheckout)
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogOut)
                    .addComponent(btnReset)
                    .addComponent(btnNewOrder))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnchecking)
                    .addComponent(txtProductId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(btnAdd)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        Login login=new Login();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void txtProductIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductIdActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtProductId.setText("");
        spQuantity.setValue(1);
//        DefaultTableModel defaultTableModel=new DefaultTableModel();
//        tblProductList.setModel(defaultTableModel);
//        int rows = tblProductList.getRowCount();
//        for(int i=0;i<rows;i++){
//        defaultTableModel
//        }
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnNewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewOrderActionPerformed
        // TODO add your handling code here:
        //
        
        //OptionPane.showMessageDialog(this, OrderService.printOrder(order));
    }//GEN-LAST:event_btnNewOrderActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        ProductBL productBL=new ProductBL();
        String id=txtProductId.getText();
        Integer amount=(Integer) spQuantity.getValue();
        if(id.equals("")||id==null){
            JOptionPane.showMessageDialog(this, "Product id is empty", "Checking Product", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Product product=productBL.getById(id);
        if(product==null){
            JOptionPane.showMessageDialog(this, "Product doesn't Exist", "Checking Product", JOptionPane.ERROR_MESSAGE);
        }else{
            //JOptionPane.showMessageDialog(this, product.getDiscounted());
            DefaultTableModel defaultTableModel=new DefaultTableModel();
            tblProductList.setModel(defaultTableModel);
            product.setAmount(amount);
            boolean check=false;
            for(Product product1 : order.getProductList()){
                if(product1.getProductId().equals(product.getProductId())){
                    product1.setAmount(product1.getAmount()+product.getAmount());
                    check=true;
                }
            }
            if(check==false){
                order.getProductList().add(product);
            }
            try{
                defaultTableModel.addColumn("Id");
                defaultTableModel.addColumn("Product");
                defaultTableModel.addColumn("Price");
                defaultTableModel.addColumn("Dicounted");
                defaultTableModel.addColumn("Quantity");
                defaultTableModel.addColumn("Total Price");
                //JOptionPane.showMessageDialog(this, product.getDiscounted());
                for(Product product2:order.getProductList()){
                defaultTableModel.addRow(new Object[]{product2.getProductId(),product2.getName(),OrderService.printPrice(product2.getPrice()),OrderService.printPrice(product2.getDiscounted()),product2.getAmount(),OrderService.printPrice(OrderService.Total(product2))});
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "SomeThing Wrong, Try again!", "Add new Product", JOptionPane.ERROR_MESSAGE);
            }
            txtProductId.setText("");
            spQuantity.setValue(1);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btncheckingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncheckingActionPerformed
        // TODO add your handling code here:
        ProductBL productBL=new ProductBL();
        String id=txtProductId.getText();
        if(id.equals("")||id==null){
            JOptionPane.showMessageDialog(this, "Product id is empty", "Checking Product", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Product product=productBL.getById(id);
        if(product==null){
            JOptionPane.showMessageDialog(this, "Product doesn't Exist", "Checking Product", JOptionPane.ERROR_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this, "True");
//            DefaultTableModel defaultTableModel=new DefaultTableModel();
//            tblProductList.setModel(defaultTableModel);
//            try{
//                defaultTableModel.addRow(new Object[]{product.getProductId(),product.getName(),product.getPrice(),product.getDiscounted(),product.getLeftQuantity(),});
//            }catch(Exception e){
//                
//            }
        }
        
    }//GEN-LAST:event_btncheckingActionPerformed

    private void btnCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckoutActionPerformed
        // TODO add your handling code here:
                    OrderBL orderBL=new OrderBL();
                    order.setStaff_id(account.getStaff_id());
                    order.setStore_id(1);
                    if(order.getProductList().isEmpty()){
                            JOptionPane.showMessageDialog(this, "Order is empty!", "Create Order", JOptionPane.ERROR_MESSAGE);
                            order =new Order();
                            return;
                    }
                    int checkout=JOptionPane.showConfirmDialog(this, "Checkout?", "", JOptionPane.YES_NO_CANCEL_OPTION);
                    if(checkout==0){
                        if(order.getProductList().isEmpty()){
                            JOptionPane.showMessageDialog(this, "Order is empty!", "Create Order", JOptionPane.ERROR_MESSAGE);
                            order =new Order();
                            return;
                        }
                        order=orderBL.createOrder(order);
                        if(order==null){
                            JOptionPane.showMessageDialog(this, "Create fail!\nTry again", "Create Order", JOptionPane.ERROR_MESSAGE);
                        }else{
                            JOptionPane.showConfirmDialog(this, "Print Bill?", "", JOptionPane.YES_NO_CANCEL_OPTION);
                        }
                    }
                    
        //clear order
        DefaultTableModel defaultTableModel=new DefaultTableModel();
        tblProductList.setModel(defaultTableModel);
        order=new Order();
        try{
                defaultTableModel.addColumn("Id");
                defaultTableModel.addColumn("Product");
                defaultTableModel.addColumn("Price");
                defaultTableModel.addColumn("Dicounted");
                defaultTableModel.addColumn("Quantity");
                defaultTableModel.addColumn("Total Price");
                //JOptionPane.showMessageDialog(this, product.getDiscounted());
                
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "SomeThing Wrong, Try again!", "Add new Product", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_btnCheckoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Account account=new AccountBL().login("TranVanHuan",StaticFunctionService.getMd5("Thangnguyenquyet123"));
                new StaffForm(account).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Id;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCheckout;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnNewOrder;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnchecking;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spQuantity;
    private javax.swing.JTable tblProductList;
    private javax.swing.JTextField txtProductId;
    // End of variables declaration//GEN-END:variables
}
