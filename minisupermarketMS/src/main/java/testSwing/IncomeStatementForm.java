/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testSwing;

import vn.edu.vtc.bl.OrderBL;
import vn.edu.vtc.dal.AccountDAL;
import vn.edu.vtc.persistance.Account;
import vn.edu.vtc.persistance.Order;
import vn.edu.vtc.pl.OrderService;
import vn.edu.vtc.pl.StaticFunctionService;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author asus
 */
public class IncomeStatementForm extends javax.swing.JFrame {
    Account account=new Account();
    DefaultTableModel defaultTableModel;
    List<Order> orderList=null;
    public ZoneId z= ZoneId.of("GMT+7");
    /**
     * Creates new form IncomeStatementForm
     */
    public IncomeStatementForm(Account account) {
        initComponents();
        this.account=account;
        defaultTableModel=new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
            return false;
        }
        };
        tblResultSearch.setModel(defaultTableModel);
        defaultTableModel.addColumn("Mã Hóa Đơn");
        defaultTableModel.addColumn("Nhân Viên Bán Hàng");
        defaultTableModel.addColumn("Ngày Bán");
        defaultTableModel.addColumn("Giờ Bán");
        defaultTableModel.addColumn("Tổng Tiền Hóa Đơn");
        tblResultSearch.setModel(defaultTableModel);
        tblResultSearch.setComponentPopupMenu(popupTableResultSearch);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupTableResultSearch = new javax.swing.JPopupMenu();
        popupItemShowDetail = new javax.swing.JMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        lblForStartDate = new javax.swing.JLabel();
        spStartDate = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbForEndDate = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        spEndDate = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbValidationStartDate = new javax.swing.JLabel();
        lbValidationEndDate = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnSearch = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnPrintReport = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblResultSearch = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        lbTotalQuantityOrder = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lbTotalPrice = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        comStartMonth = new javax.swing.JComboBox<>();
        comEndMonth = new javax.swing.JComboBox<>();
        checkboxTimeNow = new javax.swing.JCheckBox();
        comStartYear = new javax.swing.JComboBox<>();
        comEndYear = new javax.swing.JComboBox<>();

        popupItemShowDetail.setText("Xem Chi Tiết");
        popupItemShowDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popupItemShowDetailActionPerformed(evt);
            }
        });
        popupTableResultSearch.add(popupItemShowDetail);

        popupTableResultSearch.getAccessibleContext().setAccessibleParent(tblResultSearch);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Thống kê doanh thu");

        btnBack.setText("<- Trờ Về");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblForStartDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblForStartDate.setText("Thống kê từ ngày :");
        lblForStartDate.setAutoscrolls(true);

        spStartDate.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        jLabel2.setText("Ngày : ");

        jLabel3.setText("Tháng :");

        jLabel4.setText("Năm :");

        lbForEndDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbForEndDate.setText("           Đến ngày :");

        jLabel5.setText("Ngày :");

        spEndDate.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        spEndDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                spEndDateFocusGained(evt);
            }
        });

        jLabel6.setText("Tháng :");

        jLabel7.setText("Năm :");

        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnRefresh.setText("Làm mới");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnPrintReport.setText("In Thống Kê");
        btnPrintReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintReportActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblResultSearch.setAutoCreateRowSorter(true);
        tblResultSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Hóa Đơn", "Nhân Viên ", "Ngày Bán", "Giờ Bán", "Tổng Tiền"
            }
        ));
        jScrollPane2.setViewportView(tblResultSearch);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setText("Tổng Số Hóa Đơn :");

        jLabel9.setText("Tổng Tiền Hóa Đơn :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbTotalQuantityOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(lbTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbTotalQuantityOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        comStartMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        comStartMonth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                comStartMonthFocusGained(evt);
            }
        });
        comStartMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comStartMonthActionPerformed(evt);
            }
        });

        comEndMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        comEndMonth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                comEndMonthFocusGained(evt);
            }
        });
        comEndMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comEndMonthActionPerformed(evt);
            }
        });

        checkboxTimeNow.setText("Hiện Tại");
        checkboxTimeNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxTimeNowActionPerformed(evt);
            }
        });

        comStartYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", " " }));
        comStartYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comStartYearActionPerformed(evt);
            }
        });

        comEndYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034" }));
        comEndYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comEndYearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbForEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblForStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(spEndDate)
                                    .addComponent(spStartDate))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comStartMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comEndMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comStartYear, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comEndYear, 0, 65, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(checkboxTimeNow, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbValidationStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbValidationEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(btnRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31)
                        .addComponent(btnPrintReport)
                        .addGap(36, 36, 36))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblForStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(lbValidationStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comStartMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comStartYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnSearch))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbValidationEndDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbForEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)
                                .addComponent(spEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(comEndMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(checkboxTimeNow)
                                .addComponent(comEndYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefresh))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btnPrintReport, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(63, 63, 63)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        ManagerForm managerForm=new ManagerForm(account);
        managerForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void comStartMonthFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comStartMonthFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_comStartMonthFocusGained

    private void checkboxTimeNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxTimeNowActionPerformed
        // TODO add your handling code here:
        //check box on
        if (checkboxTimeNow.isSelected()){
            setDefault("End");
            spEndDate.setEnabled(false);
            comEndMonth.setEnabled(false);
            comEndYear.setEnabled(false);

        }else {
            spEndDate.setEnabled(true);
            comEndMonth.setEnabled(true);
            comEndYear.setEnabled(true);
        }

    }//GEN-LAST:event_checkboxTimeNowActionPerformed

    private void spEndDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_spEndDateFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_spEndDateFocusGained

    private void comEndMonthFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comEndMonthFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_comEndMonthFocusGained

    private void comStartMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comStartMonthActionPerformed
        // TODO add your handling code here:
        //validation Start datetime
        validInput("Start");
    }//GEN-LAST:event_comStartMonthActionPerformed

    private void comEndMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comEndMonthActionPerformed
        // TODO add your handling code here:
        validInput("End");
    }//GEN-LAST:event_comEndMonthActionPerformed

    private void comStartYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comStartYearActionPerformed
        // TODO add your handling code here:
        validInput("Start");
    }//GEN-LAST:event_comStartYearActionPerformed

    private void comEndYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comEndYearActionPerformed
        // TODO add your handling code here:
        validInput("End");
    }//GEN-LAST:event_comEndYearActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        spStartDate.setValue(1);
        comStartMonth.setSelectedIndex(0);
        comStartYear.setSelectedIndex(0); 
        spEndDate.setValue(1);
        comEndMonth.setSelectedIndex(0);
        comEndYear.setSelectedIndex(0);
        checkboxTimeNow.setSelected(false);
        defaultTableModel.setRowCount(0);
        spEndDate.setEnabled(true);
        comEndMonth.setEnabled(true);
        comEndYear.setEnabled(true);
        orderList=new ArrayList<>();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        //kiem tra ngay thang bat dau co lon hon ngay hien tai
            //lay thoi gian hien tai
        Integer date=(Integer) spStartDate.getValue();
        String month= (String) comStartMonth.getSelectedItem();
        String year= (String) comStartYear.getSelectedItem();
        String datetimeBegin=year+"-"+month+"-"+date;
        Integer date1=(Integer) spEndDate.getValue();
        String month1= (String) comEndMonth.getSelectedItem();
        String year1= (String) comEndYear.getSelectedItem();
        String datetimeEnd=year1+"-"+month1+"-"+date1;
        if (validationBegintimeMatchesWithRealtime(datetimeBegin)==1||validationBegintimeMatchesWithRealtime(datetimeBegin)==2){
            setDefault("Start");
        }
        orderList=new ArrayList<>();
        System.out.println(datetimeBegin + datetimeEnd);
        orderList=new OrderBL().getReport(datetimeBegin,datetimeEnd);
        System.out.println(orderList);
        if(orderList.isEmpty()){
            JOptionPane.showMessageDialog(this, "Không tìm thấy hóa đơn trong khoảng thời gian đã chọn!","Tìm kiếm hóa đơn",JOptionPane.ERROR_MESSAGE);
        }else{
            defaultTableModel.setRowCount(0);
            for (Order order : orderList) {
                List<String> dateTime=OrderService.validateSQLdatetime(order.getDate());
                defaultTableModel.addRow(new Object[]{order.getId(),order.getStaff_name(),dateTime.get(1),dateTime.get(0),OrderService.printPrice(OrderService.totalOrder(order))});
                System.out.println("andkjnsndkas");
            }

            lbTotalQuantityOrder.setText(String.valueOf(orderList.size()));
            lbTotalPrice.setText(OrderService.printPrice(OrderService.totalOrder(orderList)));
        }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnPrintReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintReportActionPerformed
        // TODO add your handling code here:
        if (orderList==null){
            JOptionPane.showMessageDialog(this,"Thêm nội dung để hiện thị");
            return;
        }
        if (!orderList.isEmpty()){
            ReportIncomeForm reportIncomeForm=new ReportIncomeForm(OrderService.printReport(orderList));
            reportIncomeForm.setVisible(true);
        }else {
            JOptionPane.showMessageDialog(this,"Thêm nội dung để hiện thị");
        }

    }//GEN-LAST:event_btnPrintReportActionPerformed

    private void popupItemShowDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popupItemShowDetailActionPerformed
        // TODO add your handling code here:
        int useRow = tblResultSearch.getSelectedRow();
        if (useRow==-1){
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn để xem chi tiết !", "Xem chi tiết", JOptionPane.ERROR_MESSAGE);
        }else {
            String idSearch=String.valueOf(tblResultSearch.getValueAt(useRow, 0));
            Order order=new OrderBL().getbyId(Integer.valueOf(idSearch));
            if (order!=null){
                Bill bill=new Bill(OrderService.printOrder2(order));
                    bill.setVisible(true);
            }
        }

    }//GEN-LAST:event_popupItemShowDetailActionPerformed
    public int validationBegintimeMatchesWithRealtime (String datetime){
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date date1 = null;
        Date date2 = null;
        ZonedDateTime zdt = ZonedDateTime.now(z);
        DateTimeFormatter formatter2 = DateTimeFormatter.ofPattern("yyyy/MM/dd - HH:mm:ss z");
        String formattedString2 = zdt.format(formatter2);
        String[] s = formattedString2.split("\\s", 5);
        String realDate =s[0];
        realDate=realDate.replaceAll("/","-");
        realDate=realDate.replaceAll(" ","");
        try {
            date1 = sdf.parse(datetime);
            date2 = sdf.parse(realDate);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        if (date1.compareTo(date2) > 0) {
            return 1;
        } else if (date1.compareTo(date2) < 0) {
            return -1;
        } else if (date1.compareTo(date2) == 0) {
            return 0;
        } else {
            return 2;
        }
    }
    public boolean setDefault(String where){
        ZonedDateTime zdt = ZonedDateTime.now(z);
        DateTimeFormatter formatter2 = DateTimeFormatter.ofPattern("dd/MM/yyyy - HH:mm:ss z");
        String formattedString2 = zdt.format(formatter2);
        String[] s = formattedString2.split("\\s", 5);
        String realDate =s[0];
        String[] s2=realDate.split("/");
        if (where.equalsIgnoreCase("End")){
            spEndDate.setValue(Integer.valueOf(s2[0]));
            comEndMonth.setSelectedItem(s2[1]);
            comEndYear.setSelectedIndex(0);
            return  true;
        }else if (where.equalsIgnoreCase("Start")){
            spStartDate.setValue(Integer.valueOf(s2[0]));
            comStartMonth.setSelectedItem(s2[1]);
            comEndYear.setSelectedIndex(0);
            return true;
        }else {
            return false;
        }

    }
    public boolean validInput(String where){
        if (where.equalsIgnoreCase("Start")){
            Integer date=(Integer) spStartDate.getValue();
            String month= (String) comStartMonth.getSelectedItem();
            String year= (String) comStartYear.getSelectedItem();
            if (month.equals("01")||month.equals("03")||month.equals("5")||month.equals("7")||month.equals("8")||month.equals("10")||month.equals("12")){
                spStartDate.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
                spStartDate.setValue(date);
            }else if (month.equals("02")){
                spStartDate.setModel(new javax.swing.SpinnerNumberModel(1, 1, 28, 1));
                if (Integer.valueOf(date)>28){
                    spStartDate.setValue(28);
                }else {
                    spStartDate.setValue(date);
                }
                if (Integer.valueOf(year)%4==0){
                    spStartDate.setModel(new javax.swing.SpinnerNumberModel(1, 1, 29, 1));
                    if (Integer.valueOf(date)>29){
                        spStartDate.setValue(29);
                    }else {
                        spStartDate.setValue(date);
                    }
                }
            }else {
                spStartDate.setModel(new javax.swing.SpinnerNumberModel(1, 1, 30, 1));
            }
            return true;
        }else if (where.equalsIgnoreCase("End")){
            Integer date=(Integer) spEndDate.getValue();
            String month= (String) comEndMonth.getSelectedItem();
            String year= (String) comEndYear.getSelectedItem();
            if (month.equals("01")||month.equals("03")||month.equals("5")||month.equals("7")||month.equals("8")||month.equals("10")||month.equals("12")){
                spEndDate.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
                spEndDate.setValue(date);
            }else if (month.equals("02")){
                spEndDate.setModel(new javax.swing.SpinnerNumberModel(1, 1, 28, 1));
                if (Integer.valueOf(date)>28){
                    spEndDate.setValue(28);
                }else {
                    spEndDate.setValue(date);
                }
                if (Integer.valueOf(year)%4==0){
                    spEndDate.setModel(new javax.swing.SpinnerNumberModel(1, 1, 29, 1));
                    if (Integer.valueOf(date)>29){
                        spEndDate.setValue(29);
                    }else {
                        spEndDate.setValue(date);
                    }
                }
            }else {
                spEndDate.setModel(new javax.swing.SpinnerNumberModel(1, 1, 30, 1));
                if (Integer.valueOf(date)>30){
                    spEndDate.setValue(30);
                }else {
                    spEndDate.setValue(date);
                }
            }
            return true;
        }else {
            return false;
        }

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IncomeStatementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IncomeStatementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IncomeStatementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IncomeStatementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Account account=new AccountDAL().getAccount("Nguyenquyetthang", StaticFunctionService.getMd5("Thangnguyenquyet123"));
                new IncomeStatementForm(account).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPrintReport;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JCheckBox checkboxTimeNow;
    private javax.swing.JComboBox<String> comEndMonth;
    private javax.swing.JComboBox<String> comEndYear;
    private javax.swing.JComboBox<String> comStartMonth;
    private javax.swing.JComboBox<String> comStartYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lbForEndDate;
    private javax.swing.JLabel lbTotalPrice;
    private javax.swing.JLabel lbTotalQuantityOrder;
    private javax.swing.JLabel lbValidationEndDate;
    private javax.swing.JLabel lbValidationStartDate;
    private javax.swing.JLabel lblForStartDate;
    private javax.swing.JMenuItem popupItemShowDetail;
    private javax.swing.JPopupMenu popupTableResultSearch;
    private javax.swing.JSpinner spEndDate;
    private javax.swing.JSpinner spStartDate;
    private javax.swing.JTable tblResultSearch;
    // End of variables declaration//GEN-END:variables
}
